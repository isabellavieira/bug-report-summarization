teo1978 commented from http ://bugs.jquery.com/ticket/11138 when you serialize using code no button is pressed wrong : it is if a button press triggered the submit event . and if a button press triggered the code you 'll need to add it to the serialized input yourself . you shouldn 't have to .

teo1978 commented no submit button value is serialized since the form was not submitted using a button ok , so that 's by wrong design . http ://www.w3.org/tr/html401/interact/forms.html#h-17.13.2 a successful control must be defined within a form element and must have a control name . however : [...] if a form contains more than one submit button , only the activated submit button is successful . by that definition , if the form has only one submit button , it is succesful it says the activated submit button . it doesn 't say anything about "being submitted using a button ". if the submit event has been triggered by clicking a given submit button , i can 't see any way to not consider that to be "the activated " submit button .

mr21 commented activeelement is the current dom element who has actually the focus . so ... when jquery is serializing the form , i suppose we can 't have the guaranty the focus is still on the submit button :/

dmethvin commented unless you call it from a listener that has been triggered by pressing the button . how would jquery know that , as opposed to being called some other way ? can you show some code ?

teo1978 commented the documentation says what the method does . i got it : it is documented . sorry for missing that . yet the behavior is wrong . the tickets explain the reasoning . which is wrong there is no submit button activated when you call .serialize() from within jquery unless you call it from a listener that has been triggered by pressing the button . besides , it would be unfair to change the behavior now backward compatibility is an argument , indeed . it is to be considered whether to fix the behavior and break bc or keep a wrong , inconsistent behavior for the sake of bc . i 've seen bc broken in the past in jquery in favour of improved consistency . also , it 's not that easy to incur in a case where the change would actually do harm , though of course it is possible . and penalize the people who read the documentation . indeed , you could be penalizing people who read the documentation and worked around the incorrect (but documented ) behavior . but see above .

dmethvin commented the documentation says what the method does . the tickets explain the reasoning . there is no submit button activated when you call .serialize() from within jquery . besides , it would be unfair to change the behavior now and penalize the people who read the documentation .

teo1978 commented of course . but if you call it from anything else than a submit event , then it 's ok that no submit button is included in serialization automatically , because it is not a succesful input element by definition . the only question is whether using activeelement is reliable and cross -browser. that 's worth investigating and this issue should be reopened (also if that turns our not to work for all cases i 'm pretty sure there are other ways to be explored , as this issue had always been dismissed as non existing ) also , according to the definition of successful given in the standard , when there 's only one submit button , it should always be included (unless there 's some caveat about that ), and that seems trivial .

mr21 commented @teo1978, omg , there is no reason to be aggressive ... @dmethvin, modify the .serialize methode is impossible (because it 's not linked with any event ) but why not include something in the event of .submit? maybe it 's possible with the new document .activeelement. look : http ://jsfiddle.net/mr21/u1ult3d9/

mr21 commented hmm yep but i use activeelem just after the submit callback . .serialize is not depending of any event or callback , you can call this methode when you want , not only in the submit callback .

scottgonzalez commented i mean whether three are cases in which the submit button triggering the event triggering serialize may not be the active element for some reason that 's an extremely common occurrence . forms are frequently submitted via other form controls . see http ://jsbin.com/xutubediya/1

